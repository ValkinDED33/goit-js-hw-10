{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// 2-snackbar.js\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault(); // Prevent the default form submission\n\n  // Get form values\n  const delayInput = event.target.elements.delay.value;\n  const state = event.target.elements.state.value;\n\n  const delay = parseInt(delayInput, 10);\n\n  if (isNaN(delay) || delay <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a valid delay in milliseconds.',\n    });\n    return;\n  }\n\n  // Create a promise\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  // Handle the promise\n  promise\n    .then(result => {\n      iziToast.success({\n        title: '✅ Success',\n        message: `Fulfilled promise in ${result}ms`,\n      });\n    })\n    .catch(error => {\n      iziToast.error({\n        title: '❌ Error',\n        message: `Rejected promise in ${error}ms`,\n      });\n    });\n});\n"],"names":["event","delayInput","state","delay","iziToast","resolve","reject","result","error"],"mappings":"oFAIA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUA,EAAO,CAC1EA,EAAM,eAAc,EAGpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MAAM,MACzCE,EAAQF,EAAM,OAAO,SAAS,MAAM,MAEpCG,EAAQ,SAASF,EAAY,EAAE,EAErC,GAAI,MAAME,CAAK,GAAKA,GAAS,EAAG,CAC9BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,6CACf,CAAK,EACD,MACD,CAGe,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXJ,IAAU,YACZG,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAIE,KAAKI,GAAU,CACdH,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,wBAAwBG,CAAM,IAC/C,CAAO,CACP,CAAK,EACA,MAAMC,GAAS,CACdJ,EAAS,MAAM,CACb,MAAO,UACP,QAAS,uBAAuBI,CAAK,IAC7C,CAAO,CACP,CAAK,CACL,CAAC"}